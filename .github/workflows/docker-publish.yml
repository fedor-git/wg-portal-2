name: Build and Push to GHCR

on:
  workflow_dispatch: {}
  push:
    branches: [master]
    tags: ["v*.*.*"]

permissions:
  contents: read
  packages: write

jobs:
  build-n-push:
    name: Build and Push to GHCR
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch,enable=true
            type=ref,event=tag,enable=true
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          build-args: |
            BUILD_VERSION=${{ steps.meta.outputs.version }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Pull and Export binaries from GHCR image
        uses: docker/pull-action@v1
        with:
          images: ${{ steps.meta.outputs.tags }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: 'wg-portal_linux*'
          generate_release_notes: true
